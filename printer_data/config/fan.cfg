[fan]
pin: PD3
max_power: 0.8 
# This should be set to 0.8 on most motherboards to give full range of control to your slicer. 
# Anything above 80% duty cycle will be full power on this particular brushless driver.
# To fine-tune the max_power parameter for your particular motherboard, set max_power to 1.0, go into the Klipper dashboard, and increase fan speed 1% at a time until the actual fan speed stops increasing as you increase the fan speed. Divide the fan speed at this point by 100 and enter it into the max_power parameter.
# This parameter defines the maximum power (expressed as a value from 0.0 to 1.0) that the pin may be set to. 
# The value 1.0 allows the pin to be set fully enabled for extended periods, while a value of 0.5 would allow the pin to be enabled for no more than half the time. 
# This setting may be used to limit the total power output (over extended periods) to the fan. 
# If this value is less than 1.0, then fan speed requests will be scaled between zero and max_power (for example, if max_power is 0.9 and a fan speed of 80% is requested, then the fan power will be set to 72%).
shutdown_speed: 0 
# The desired fan speed (expressed as a value from 0.0 to 1.0) if 
# The microcontroller software enters an error state. 
# The default is 0.
cycle_time: 0.005 
# The amount of time (in seconds) for each PWM power cycle to the fan. 
# It is recommended this be 10 milliseconds or greater when using software-based PWM. 
# The default is 0.010 seconds.
hardware_pwm: False 
# Enable this to use hardware PWM instead of software PWM. 
# Most fans do not work well with hardware PWM, so it is not recommended to enable this unless there is an electrical requirement to switch at very high speeds. 
# When using hardware PWM, the actual cycle time is constrained by the implementation and may be significantly different than the requested cycle_time. 
# The default is False.
kick_start_time: 0.100 
# Time (in seconds) to run the fan at full speed when either first enabling or increasing it by more than 50% (helps get the fan spinning). 
# The default is 0.100 seconds.
off_below: 0.1 
# The blower will not spin with the included brushless driver when the duty cycle is below 8%. When scaled with Max_power at 0.8, the off_below parameter should be set to 0.1. 
# To calibrate this setting, gradually lower the fan speed to determine the lowest input speed that reliably drives the fan without stalls. 
# Set off_below to the duty cycle corresponding to this value (for example, 8% -> 0.08/Max_power -> 0.08/0.8 -> 0.1) or slightly higher. 
# This parameter is the minimum input speed that will power the fan (expressed as a value from 0.0 to 1.0). 
# When a speed lower than off_below is requested, the fan will instead be turned off. 
# This setting may be used to prevent fan stalls and to ensure effective kick starts. 
# To calibrate this setting, start with off_below set to 0.0 and the fan spinning. 
# Gradually lower the fan speed to determine the lowest input speed that reliably drives the fan without stalls. 
# Set off_below to the duty cycle corresponding to this value (for example, 12% -> 0.12) or slightly higher.
#Tachometer_pin:
# Tachometer input pin for monitoring fan speed. A pullup is generally required. 
# This parameter is optional.
#Tachometer_ppr: 1
# When tachometer_pin is specified, this is the number of pulses per revolution of the tachometer signal.
#Tachometer_poll_interval: 0.0005
# When tachometer_pin is specified, this is the polling period of the tachometer pin, in seconds. 
# The default is 0.0015, which is fast enough for fans below 10,000 RPM at 2 PPR. 
# This must be smaller than 30/(tachometer_ppr*rpm), with some margin, where rpm is the 
# maximum speed (in RPM) of the fan.


#[fan_generic CB2]
## FAN CB"
#pin: MCU:PC15
#max_power: 1.0
#kick_start_time: 0.5                                                # Depending on your fan, you may need to increase this value if your fan will not start and stall
#off_below: 0.13
#cycle_time: 0.010

[fan_generic left_panel]
pin: host:gpio0
max_power: 1.0
kick_start_time: 0.5                                                # Depending on your fan, you may need to increase this value if your fan will not start
off_below: 0.13
cycle_time: 0.010

# [fan_generic xy_stepper]
# pin: CB2:gpiochip3/gpio30
# max_power: 1.0
# kick_start_time: 0.5                                                # Depending on your fan, you may need to increase this value if your fan will not start
# off_below: 0.13
# cycle_time: 0.010


[controller_fan xy_stepper]
pin: host:gpio5
max_power: 1
#shutdown_speed:
cycle_time: 0.010
hardware_pwm: false
kick_start_time: 0.100
off_below: 0.15
fan_speed: 1.0
idle_timeout: 60
idle_speed: 0.3
# heater: 
stepper: stepper_x, stepper_y



# [fan_generic ez_stepper]
# pin: CB2:gpiochip3/gpio31
# max_power: 1.0
# kick_start_time: 0.5                                                # Depending on your fan, you may need to increase this value if your fan will not start
# off_below: 0.13
# cycle_time: 0.010


[controller_fan ez_stepper]
pin: host:gpio6
max_power: 1
#shutdown_speed:
cycle_time: 0.010
hardware_pwm: false
kick_start_time: 0.100
off_below: 0.15
fan_speed: 1.0
idle_timeout: 60
idle_speed: 0.3
# heater: 
stepper: extruder, stepper_z


[fan_generic right_panel]
pin: host:gpio13
max_power: 1.0
kick_start_time: 0.5                                                # Depending on your fan, you may need to increase this value if your fan will not start
off_below: 0.13
cycle_time: 0.010


[temperature_fan host_Fan]
pin: host:gpio26         # CB2:gpio269
sensor_type: temperature_host
control: watermark
min_temp: 0
max_temp: 85
target_temp: 45
max_speed: 0.5


[heater_fan mosquito_magnum]
pin: PD2
cycle_time: 0.010
hardware_pwm: False
kick_start_time: 0.100
off_below: 0.3




[controller_fan printer_cooling]
pin: PD4
max_power: 1
#shutdown_speed:
cycle_time: 0.010
hardware_pwm: false
kick_start_time: 0.100
off_below: 0.2
#tachometer_pin:
#tachometer_ppr:
#tachometer_poll_interval:
#enable_pin:
#   See the "fan" section for a description of the above parameters.
fan_speed: 1.0
#   The fan speed (expressed as a value from 0.0 to 1.0) that the fan
#   will be set to when a heater or stepper driver is active.
#   The default is 1.0
idle_timeout: 60
#   The amount of time (in seconds) after a stepper driver or heater
#   was active and the fan should be kept running. The default
#   is 30 seconds.
idle_speed: 0.2
#   The fan speed (expressed as a value from 0.0 to 1.0) that the fan
#   will be set to when a heater or stepper driver was active and
#   before the idle_timeout is reached. The default is fan_speed.
heater: heater_bed  # extruder mal ausgeklammert, da Druckbett eigentlich reichen sollte als trigger
#stepper:
#   Name of the config section defining the heater/stepper that this fan
#   is associated with. If a comma separated list of heater/stepper names
#   is provided here, then the fan will be enabled when any of the given
#   heaters/steppers are enabled. The default heater is "extruder", the
#   default stepper is all of them.